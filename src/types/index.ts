export type MediaType = 'photo' | 'video' | 'audio';

export interface Media {
  id: string;
  userId: string;
  type: MediaType;
  url: string;
  sizeMB: number;
  title: string;
  description: string;
  highlighted: boolean;
  viewsCount: number;
  likesCount: number;
  favoritesCount: number;
  createdAt: Date;
}

export type UserRole = 'artist' | 'contractor';

export interface User {
  id: string;
  email: string;
  role: UserRole;
  planId: string;
  isAdmin?: boolean;
  active?: boolean;
  credits?: number;
  bucketUse?: number;
  rating?: number;
  reviewCount?: number;
  createdAt: Date;
  updatedAt?: Date;
  autoOffer?: {
    enabled: boolean;
    minCache: number;
    genres: string[];
    updatedAt: Date;
  };
  pushToken?: string;
  pushTokenUpdatedAt?: Date;
}

export interface ArtistProfile {
  userId: string;
  minimumCache: number;
  maximumCache: number;
  coverageRadius: number;
  genres: string[];
  description: string;
  mainCity: string;
  autoOfferEnabled: boolean;
  createdAt: Date;
  updatedAt: Date;
}

export interface ContractorProfile {
  userId: string;
  mainAddress: string;
  venueCapacity: number;
  description: string;
  eventTypes: string[];
  createdAt: Date;
  updatedAt: Date;
}

export interface AvailabilityBlock {
  id: string;
  artistId: string;
  startDate: Date;
  endDate: Date;
  status: 'FREE' | 'BUSY';
  eventId?: string;
  createdAt: Date;
}

export interface Event {
  id: string;
  creatorId: string;
  title: string;
  startDate: Date;
  endDate: Date;
  location: string;
  eventType: 'SHOW' | 'FESTIVAL';
  minCache: number;
  maxCache: number;
  styles: string[];
  status: 'ABERTO' | 'ENCERRADO' | 'CANCELADO' | 'CONCLUIDO';
  createdAt: Date;
  updatedAt?: Date;
}

export interface Candidacy {
  id: string;
  artistId: string;
  eventId: string;
  status: 'PENDENTE' | 'APROVADA' | 'REJEITADA';
  createdAt: Date;
  updatedAt?: Date;
  autoGenerated?: boolean;
}

export interface Review {
  id: string;
  reviewerId: string;
  reviewedId: string;
  eventId: string;
  rating: number;
  comment: string;
  createdAt: Date;
}

export interface Notification {
  id: string;
  type: 'chat' | 'event' | 'candidacy' | 'admin-broadcast';
  title?: string;
  body?: string;
  senderId: string;
  receiverId: string;
  seen: boolean;
  data?: Record<string, string>;
  createdAt: Date;
  chatId?: string;
  eventId?: string;
  candidacyId?: string;
  adminNotificationId?: string;
}

export interface Plan {
  id: string;
  name: string;
  price: number;
  features: string[];
  limits: {
    storage: number;
    credits: number;
    messages: number;
    genres: number;
    events: number;
  };
}